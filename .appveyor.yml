version: 0.0.1.{build}-test

# Use default image unless needed
#os:
  #- Windows Server 2012 R2

shallow_clone: true

environment:
  LUAROCKS_VER: 2.2.2
  matrix:
  - LUA_VER: 5.1.5
  # - LUA_VER: 5.2.4  # Lua 5.2.4 with compatibility flags enabled (DLUA_COMPAT_ALL).
  - LUA_VER: 5.2.4  # Lua 5.2.4 with compatibility flags disabled.
    NOCOMPAT: true
  # - LUA_VER: 5.3.1  # Lua 5.3.1 with compatibility flags enabled (DLUA_COMPAT_5_2).
  - LUA_VER: 5.3.1  # Lua 5.3.1 with compatibility flags disabled.
    NOCOMPAT: true
  - LJ_VER: 2.0.4
  - LJ_VER: 2.1

# matrix:
#   allow_failures:
#     - configuration: 2010
#       platform: x64
#     - configuration: 2008
#       platform: x64
#     - configuration: MinGW
#       platform: x64

# Abuse this section so we can have a matrix with different Compiler versions
# Is there a better way? Like injecting an array in the matrix?
configuration:
  #- 2015 # disabled until LuaRocks supports it officially
  - 2013
  - 2012
  # - MinGW
  # - 2010 # only works for x86
  # - 2008 # only works for x86

platform:
  - x86
  - x64

cache:
  - c:\lua -> appveyor.yml
  - c:\external -> appveyor.yml

# Skip unsupported combinations (ie, VS2008 for x64 is not supported)
init:
  - if "%platform%" EQU "x64" ( for %%a in (2008 2010 MinGW) do ( if "%Configuration%"=="%%a" (echo "Skipping unsupported configuration" && exit /b 1 ) ) )


install:
  # Make compiler command line tools available
  - call .appveyor\set_compiler_env.bat
  # Setup Lua development/build environment
  - call .appveyor\install.bat

before_build:
  # @todo
  - echo "Installing external deps"

build_script:
  # - luarocks make rockspecs/foo-scm-0.rockspec
  - echo "Nothing to build."

before_test:
  # install test only deps (if not already installed)
  - luarocks install busted
  - luarocks install luacov
  - luarocks install luacov-coveralls

test_script:
  - echo "Testing..."
  - busted -c

after_test:
  - luacov-coveralls -v
